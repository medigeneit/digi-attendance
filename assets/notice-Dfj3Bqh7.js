import{N,r as f,O as u}from"./index-W-8vDVy9.js";const B=N("notice",()=>{const b=f([]),m=f([]),w=f([]),v=f({}),c=f(null),o=f(!1),g=f([]),y=f(0);return{notices:m,notice:v,error:c,isLoading:o,policies:w,feedbacks:g,totalFeedbacks:y,fetchPolices:async()=>{var t,s,e;try{o.value=!0;const a=await u.get("/policies");w.value=(t=a==null?void 0:a.data)==null?void 0:t.polices,c.value=null}catch(a){c.value=((e=(s=a.response)==null?void 0:s.data)==null?void 0:e.message)||"Something went wrong"}finally{o.value=!1}},fetchFileUpload:async t=>{var s,e;try{return o.value=!0,(await u.post("file-upload",t,{headers:{"Content-Type":"multipart/form-data"}})).data}catch(a){c.value=((e=(s=a.response)==null?void 0:s.data)==null?void 0:e.message)||"Something went wrong"}finally{o.value=!1}},createNoticeFeedback:async(t,s)=>{var e,a;try{return o.value=!0,await u.post(`/user/notice/feedback/${t}`,s)}catch(n){c.value=((a=(e=n.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{o.value=!1}},fetchNotices:async()=>{var t,s;try{o.value=!0;const e=await u.get("/notices");m.value=e==null?void 0:e.data,c.value=null}catch(e){c.value=((s=(t=e.response)==null?void 0:t.data)==null?void 0:s.message)||"Something went wrong"}finally{o.value=!1}},fetchNotice:async t=>{var s,e;try{o.value=!0;const n=(await u.get(`/notices/${t}`)).data;return n&&(v.value=n),c.value=null,n}catch(a){c.value=((e=(s=a.response)==null?void 0:s.data)==null?void 0:e.message)||"Something went wrong"}finally{o.value=!1}},createNotice:async t=>{var s,e,a,n,i,l,h;try{o.value=!0,c.value=null;const{data:r}=await u.post("/notices",{title:t.title,type:t.type,description:t.description,published_at:t.published_at,expired_at:t.expired_at,all_companies:!!t.all_companies,all_departments:!!t.all_departments,all_employees:!!t.all_employees,company_ids:t.company_ids||[],department_ids:t.department_ids||[],employee_ids:t.employee_ids||[]});let d=r==null?void 0:r.notice;if(d!=null&&d.id&&t.file instanceof Blob){const p=new FormData;p.append("file",t.file,t.file.name||"attachment"),d=((s=(await u.post(`/notices/${d.id}/file`,p,{transformRequest:[_=>_],headers:{}})).data)==null?void 0:s.notice)||d}return d&&m.value.unshift(d),d}catch(r){const d=(a=(e=r==null?void 0:r.response)==null?void 0:e.data)==null?void 0:a.message,p=(i=(n=r==null?void 0:r.response)==null?void 0:n.data)==null?void 0:i.errors;throw c.value=p?((h=(l=Object.values(p))==null?void 0:l[0])==null?void 0:h[0])||d:d||(r==null?void 0:r.message)||"Something went wrong",r}finally{o.value=!1}},updateNotice:async(t,s)=>{var e,a;try{o.value=!0;const n=await u.put(`/notices/${t}`,s),i=b.value.findIndex(l=>l.id===t);i!==-1&&(v.value[i]=n.data.notice),c.value=null}catch(n){c.value=((a=(e=n.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{o.value=!1}},fetchUserNotices:async()=>{var t,s,e;try{o.value=!0;const a=await u.get("/user/notices");m.value=(t=a==null?void 0:a.data)==null?void 0:t.notices,c.value=null}catch(a){c.value=((e=(s=a.response)==null?void 0:s.data)==null?void 0:e.message)||"Something went wrong"}finally{o.value=!1}},fetchNoticeDetails:async t=>{var s,e;try{o.value=!0;const n=(await u.get(`/notices/details/${t}`)).data;return n&&(v.value=n),c.value=null,n}catch(a){c.value=((e=(s=a.response)==null?void 0:s.data)==null?void 0:e.message)||"Something went wrong"}finally{o.value=!1}},fetchFeedbacks:async(t,s={})=>{var a,n,i;const e=await u.get(`/notice/feedbacks/${t}`,s);g.value=(a=e==null?void 0:e.data)==null?void 0:a.data,y.value=(i=(n=e==null?void 0:e.data)==null?void 0:n.meta)==null?void 0:i.total},downloadFeedbackUserExcel:async(t,s={})=>{var e,a;o.value=!0;try{const n=await u.get(`/notice/feedbacks/${t}?flag=excel`,{params:s,responseType:"blob"}),i=window.URL.createObjectURL(new Blob([n.data])),l=document.createElement("a");l.href=i,l.setAttribute("download",`notice_feedback_users_${t}.xlsx`),document.body.appendChild(l),l.click(),document.body.removeChild(l)}catch(n){c.value=((a=(e=n.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong",console.error(c.value)}finally{o.value=!1}},updateNoticeFile:async(t,s,{onProgress:e,signal:a}={})=>{const n=new FormData;n.append("file",s,s.name||"attachment");const{data:i}=await u.post(`/notices/${t}/file`,n,{transformRequest:[l=>l],headers:{},onUploadProgress:l=>{if(e&&l.total){const h=Math.round(l.loaded*100/l.total);e(h)}},signal:a});return i==null?void 0:i.notice}}});export{B as u};
