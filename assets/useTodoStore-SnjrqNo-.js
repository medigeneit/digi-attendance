import{L as D,r as i,x as y,M as d}from"./index-BBcPaqdt.js";const P=D("todo",()=>{const g=i(null),u=i(!1),T=i(!1),s=i(null),l=i([]),w=async a=>{var e,t,o;console.log({params:a}),u.value=!0,s.value=null;try{const r=await d.get("/todos",{params:a});l.value=((e=r.data)==null?void 0:e.todos)||[],f()}catch(r){throw s.value=((o=(t=r.response)==null?void 0:t.data)==null?void 0:o.message)||"Todos load failed",r}finally{u.value=!1}};function f(){l.value=[...l.value.sort((a,e)=>(a==null?void 0:a.user_id)!==(e==null?void 0:e.user_id)?(a==null?void 0:a.user_id)-(e==null?void 0:e.user_id):a.priority!==e.priority?a.priority-e.priority:e.id-a.id)]}const m=async()=>{var a,e,t;u.value=!0,s.value=null;try{const o=await d.get("/my-todos");l.value=((a=o.data)==null?void 0:a.todos)||[],f()}catch(o){throw s.value=((t=(e=o.response)==null?void 0:e.data)==null?void 0:t.message)||"Todos load failed",o}finally{u.value=!1}},_=a=>{var e;return(e=l.value)==null?void 0:e.filter(t=>t.date==a)},$=async a=>{var e,t;u.value=!0,s.value=null;try{const o=await d.get(`/todos/${a}`);g.value=o.data,g.value=l.value.find(r=>r.id==a)}catch(o){throw s.value=((t=(e=o.response)==null?void 0:e.data)==null?void 0:t.message)||"Todo load failed",o}finally{u.value=!1}},M=async(a,{returnWith:e}={})=>{var t,o,r;u.value=!0,s.value=null;try{const n=await d.post("/todos",a,{params:{return_with:e}});return l.value=[...l.value,(t=n.data)==null?void 0:t.todo],f(),n.data}catch(n){throw s.value=((r=(o=n.response)==null?void 0:o.data)==null?void 0:r.message)||"Todo create failed",n}finally{u.value=!1}},S=async(a,e)=>{var t,o;u.value=!0,s.value=null;try{const r=await d.put(`/todos/${a}`,e);return l.value=l.value.map(n=>{var h,c,v,p;return n.id==((c=(h=r.data)==null?void 0:h.todo)==null?void 0:c.id)?n.user?{...(v=r.data)==null?void 0:v.todo,user:{...n.user}}:{...(p=r.data)==null?void 0:p.todo}:{...n}}),r.data}catch(r){throw s.value=((o=(t=r.response)==null?void 0:t.data)==null?void 0:o.message)||"Todo update failed",r}finally{u.value=!1}},x=async(a,e)=>{var t,o;u.value=!0,s.value=null;try{await d.put(`/todos/status/${a}`,{status:e}),l.value=l.value.map(r=>r.id===a?{...r,status:e}:{...r})}catch(r){throw s.value=((o=(t=r.response)==null?void 0:t.data)==null?void 0:o.message)||"Failed to update todo status",r}finally{u.value=!1}},L=async(a,{date:e}={})=>{var t,o;u.value=!0,T.value=!0,s.value=null;try{const r=await d.put("/my-todos/rearrange",{ids:a,date:e});l.value=l.value.map(n=>{var v;const c=(((v=r.data)==null?void 0:v.changes)||[]).find(p=>p.id==n.id);return c?{...n,priority:c.priority}:n}),f()}catch(r){throw s.value=((o=(t=r.response)==null?void 0:t.data)==null?void 0:o.message)||"Todo rearranging failed",r}finally{T.value=!0,u.value=!1}},C=async a=>{var e,t;u.value=!0,s.value=null;try{await d.delete(`/todos/${a}`),l.value=l.value.filter(o=>o.id!==a)}catch(o){throw s.value=((t=(e=o.response)==null?void 0:e.data)==null?void 0:t.message)||"Todo delete failed",o}finally{u.value=!1}};return{todos:y(()=>l.value),todo:y(()=>g.value),loading:y(()=>u.value),error:y(()=>s.value),fetchTodos:w,fetchTodo:$,createTodo:M,updateTodo:S,rearrangeMyTodos:L,deleteTodo:C,fetchMyTodos:m,updateTodoStatus:x,getTodosByDate:_}});export{P as u};
