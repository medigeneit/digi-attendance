import{E as C,r as h,p as d,G as v}from"./index-rfORStRX.js";const A=C("shortLeave",()=>{const p=h(null),n=h([]),i=h(null),l=h(!1),t=h(null),f=async(a={})=>{var o,r;l.value=!0,t.value=null;try{const e=await v.get("/short-leaves",{params:a});n.value=e.data.data}catch(e){t.value=((r=(o=e.response)==null?void 0:o.data)==null?void 0:r.message)||"Failed to fetch short leaves",console.error("Error fetching short leaves:",e)}finally{l.value=!1}},y=async(a={})=>{var o,r;l.value=!0,t.value=null;try{return(await v.get("/short-leaves/create",{params:a})).data}catch(e){t.value=((r=(o=e.response)==null?void 0:o.data)==null?void 0:r.message)||"Failed to fetch short leaves",console.error("Error fetching short leaves:",e)}finally{l.value=!1}},w=async a=>{var o,r;l.value=!0,t.value=null;try{const e=await v.get(`/short-leaves/${a}`);i.value=e.data}catch(e){t.value=((r=(o=e.response)==null?void 0:o.data)==null?void 0:r.message)||`Failed to fetch short leave (ID: ${a})`,console.error(`Error fetching short leave with id ${a}:`,e)}finally{l.value=!1}},g=async a=>{var o,r;l.value=!0,t.value=null;try{const e=await v.post("/short-leaves/store",a);return n.value.push(e.data.data),e.data.data}catch(e){throw t.value=((r=(o=e.response)==null?void 0:o.data)==null?void 0:r.message)||"Failed to create short leave",console.error("Error creating short leave:",e),new Error(t.value)}finally{l.value=!1}},m=async(a,o)=>{var r,e;l.value=!0,t.value=null;try{const s=await v.put(`/short-leaves/${a}`,o),c=n.value.findIndex(u=>u.id===a);return c!==-1&&(n.value[c]=s.data.data),s.data.data}catch(s){throw t.value=((e=(r=s.response)==null?void 0:r.data)==null?void 0:e.message)||`Failed to update short leave (ID: ${a})`,console.error(`Error updating short leave with id ${a}:`,s),new Error(t.value)}finally{l.value=!1}},$=async(a,o)=>{var r,e;l.value=!0,t.value=null;try{const s=await v.put(`/attachment/short-leaves/${a}`,o),c=n.value.findIndex(u=>u.id===a);return c!==-1&&(n.value[c]=s.data.data),s.data.data}catch(s){throw t.value=((e=(r=s.response)==null?void 0:r.data)==null?void 0:e.message)||`Failed to update short leave (ID: ${a})`,console.error(`Error updating short leave with id ${a}:`,s),new Error(t.value)}finally{l.value=!1}},E=async a=>{var o,r;l.value=!0,t.value=null;try{await v.delete(`/short-leaves/${a}`),n.value=n.value.filter(e=>e.id!==a)}catch(e){throw t.value=((r=(o=e.response)==null?void 0:o.data)==null?void 0:r.message)||`Failed to delete short leave (ID: ${a})`,console.error(`Error deleting short leave with id ${a}:`,e),new Error(t.value)}finally{l.value=!1}},I=async a=>{var o,r;l.value=!0,t.value=null;try{const e=await v.post(`/short-leaves/${a}/handover-accept`),s=n.value.findIndex(c=>c.id===a);return s!==-1&&(n.value[s]=e.data.data),e.data.data}catch(e){throw t.value=((r=(o=e.response)==null?void 0:o.data)==null?void 0:r.message)||`Failed to accept handover for short leave (ID: ${a})`,console.error(`Error accepting handover for short leave with id ${a}:`,e),new Error(t.value)}finally{l.value=!1}},L=async a=>{var o,r;l.value=!0,t.value=null;try{const e=await v.post(`/short-leaves/${a}/in-charge-accept`),s=n.value.findIndex(c=>c.id===a);return s!==-1&&(n.value[s]=e.data.data),e.data.data}catch(e){throw t.value=((r=(o=e.response)==null?void 0:o.data)==null?void 0:r.message)||`Failed to accept In-Charge for short leave (ID: ${a})`,console.error(`Error accepting In-Charge for short leave with id ${a}:`,e),new Error(t.value)}finally{l.value=!1}},x=async a=>{var o,r;l.value=!0,t.value=null;try{const e=await v.post(`/short-leaves/${a}/recommend-by-accept`),s=n.value.findIndex(c=>c.id===a);return s!==-1&&(n.value[s]=e.data.data),e.data.data}catch(e){throw t.value=((r=(o=e.response)==null?void 0:o.data)==null?void 0:r.message)||`Failed to accept recommend by for short leave (ID: ${a})`,console.error(`Error accepting recommend by for short leave with id ${a}:`,e),new Error(t.value)}finally{l.value=!1}},F=async a=>{var o,r;l.value=!0,t.value=null;try{const e=await v.post(`/short-leaves/${a}/approved-by-accept`),s=n.value.findIndex(c=>c.id===a);return s!==-1&&(n.value[s]=e.data.data),e.data.data}catch(e){throw t.value=((r=(o=e.response)==null?void 0:o.data)==null?void 0:r.message)||`Failed to accept approval for short leave (ID: ${a})`,console.error(`Error accepting approval for short leave with id ${a}:`,e),new Error(t.value)}finally{l.value=!1}},S=async(a,o)=>{var r,e;l.value=!0,t.value=null;try{const s=await v.post(`/short-leaves/${a}/reject`,{rejection_reason:o}),c=n.value.findIndex(u=>u.id===a);return c!==-1&&(n.value[c]=s.data.data),s.data.data}catch(s){throw t.value=((e=(r=s.response)==null?void 0:r.data)==null?void 0:e.message)||`Failed to reject short leave (ID: ${a})`,console.error(`Error rejecting short leave with id ${a}:`,s),new Error(t.value)}finally{l.value=!1}},D=async a=>{var o,r;try{return l.value=!0,(await v.post("file-upload",a,{headers:{"Content-Type":"multipart/form-data"}})).data}catch(e){t.value=((r=(o=e.response)==null?void 0:o.data)==null?void 0:r.message)||"Something went wrong"}finally{isLoading.value=!1}};return{shortLeaves:d(()=>n.value),shortLeave:d(()=>i.value),loading:d(()=>l.value),error:d(()=>t.value),shortLeaveCreateDate:p,fetchShortLeaves:f,fetchShortLeaveById:w,createShortLeave:g,updateShortLeave:m,deleteShortLeave:E,handoverAccept:I,inChargeAccept:L,recommendByAccept:x,approvedByAccept:F,rejectShortLeave:S,fetchCreateShortLeaveData:y,uploadShortLeaveAttachment:$,fetchFileUpload:D}});export{A as u};
