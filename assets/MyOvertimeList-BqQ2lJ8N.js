import{L as B}from"./LoaderView-BSlhj5vb.js";import{J as C,r as f,q as b,K as v,$ as N,u as L,d as j,e as M,k as R,c as h,o as p,a as s,l as E,p as V,n as q,h as P,f as T,F as U,x as G,t as m}from"./index-BVInwMkd.js";import"./_plugin-vue_export-helper-DlAUqK2U.js";const J=C("overtime",()=>{const c=f([]),g=f(null),o=f(!1),a=f(null),y=f(new Date().toISOString().substring(0,7)),k=f(""),d=async(t={})=>{var n,r;o.value=!0,a.value=null;try{const e=await v.get("/manual-attendances",{params:t});c.value=e==null?void 0:e.data}catch(e){a.value=((r=(n=e.response)==null?void 0:n.data)==null?void 0:r.message)||"Failed to fetch manual attendances",console.error("Error fetching manual attendances:",e)}finally{o.value=!1}},w=async(t={})=>{var n,r;o.value=!0,a.value=null;try{const e=await v.get("/user-overtimes",{params:t});c.value=e.data}catch(e){a.value=((r=(n=e.response)==null?void 0:n.data)==null?void 0:r.message)||"Failed to fetch manual attendances",console.error("Error fetching manual attendances:",e)}finally{o.value=!1}},x=async t=>{var n,r;o.value=!0,a.value=null;try{const e=await v.get(`/manual-attendances/${t}`);g.value=e.data,await N().fetchApprovalPermissions("manual_attendance_applications",g.value.id)}catch(e){a.value=((r=(n=e.response)==null?void 0:n.data)==null?void 0:r.message)||`Failed to fetch manual attendance (ID: ${t})`,console.error(`Error fetching manual attendance with id ${t}:`,e)}finally{o.value=!1}},u=async t=>{var n,r;o.value=!0,a.value=null;try{const e=await v.post("/manual-attendances",t);return c.value.push(e.data.data),e.data.data}catch(e){throw a.value=((r=(n=e.response)==null?void 0:n.data)==null?void 0:r.message)||"Failed to create manual attendance",console.error("Error creating manual attendance:",e),new Error(a.value)}finally{o.value=!1}},_=async t=>{var n,r;o.value=!0,a.value=null;try{const e=await v.post("manual-attendance/bulk-store",t);return Array.isArray(e.data.data)&&c.value.push(...e.data.data),e.data}catch(e){throw console.error("Error creating manual attendance:",e),a.value=((r=(n=e.response)==null?void 0:n.data)==null?void 0:r.message)||"Failed to create manual attendance",new Error(a.value)}finally{o.value=!1}},O=async(t,n)=>{var r,e;o.value=!0,a.value=null;try{const l=await v.put(`/manual-attendances/${t}`,n),i=c.value.findIndex($=>$.id===t);return i!==-1&&(c.value[i]=l.data.data),l.data.data}catch(l){throw a.value=((e=(r=l.response)==null?void 0:r.data)==null?void 0:e.message)||`Failed to update manual attendance (ID: ${t})`,console.error(`Error updating manual attendance with id ${t}:`,l),new Error(a.value)}finally{o.value=!1}},I=async t=>{var n,r;o.value=!0,a.value=null;try{await v.delete(`/manual-attendances/${t}`),c.value=c.value.filter(e=>e.id!==t)}catch(e){throw a.value=((r=(n=e.response)==null?void 0:n.data)==null?void 0:r.message)||`Failed to delete manual attendance (ID: ${t})`,console.error(`Error deleting manual attendance with id ${t}:`,e),new Error(a.value)}finally{o.value=!1}},F=async t=>{var n,r;o.value=!0,a.value=null;try{const e=await v.post(`/manual-attendances/${t==null?void 0:t.id}/in-charge-accept`,t),l=c.value.findIndex(i=>i.id===id);return l!==-1&&(c.value[l]=e.data.data),e.data.data}catch(e){throw a.value=((r=(n=e.response)==null?void 0:n.data)==null?void 0:r.message)||`Failed to accept in-charge for manual attendance (ID: ${id})`,console.error(`Error accepting in-charge for manual attendance with id ${id}:`,e),new Error(a.value)}finally{o.value=!1}},S=async t=>{var n,r;o.value=!0,a.value=null;try{const e=await v.post(`/manual-attendances/${t==null?void 0:t.id}/recommend-by-accept`,t),l=c.value.findIndex(i=>i.id===id);return l!==-1&&(c.value[l]=e.data.data),e.data.data}catch(e){throw a.value=((r=(n=e.response)==null?void 0:n.data)==null?void 0:r.message)||`Failed to accept recommendation for manual attendance (ID: ${id})`,console.error(`Error accepting recommendation for manual attendance with id ${id}:`,e),new Error(a.value)}finally{o.value=!1}},D=async t=>{var n,r;o.value=!0,a.value=null;try{const e=await v.post(`/manual-attendances/${t==null?void 0:t.id}/approved-by-accept`,t),l=c.value.findIndex(i=>i.id===id);return l!==-1&&(c.value[l]=e.data.data),e.data.data}catch(e){throw a.value=((r=(n=e.response)==null?void 0:n.data)==null?void 0:r.message)||`Failed to approve manual attendance (ID: ${t==null?void 0:t.id})`,console.error(`Error approving manual attendance with id ${t==null?void 0:t.id}:`,e),new Error(a.value)}finally{o.value=!1}},A=async(t,n)=>{var r,e;o.value=!0,a.value=null;try{const l=await v.post(`/manual-attendances/${t}/reject`,{rejection_reason:n}),i=c.value.findIndex($=>$.id===t);return i!==-1&&(c.value[i]=l.data.data),l.data.data}catch(l){throw a.value=((e=(r=l.response)==null?void 0:r.data)==null?void 0:e.message)||`Failed to reject manual attendance (ID: ${t})`,console.error(`Error rejecting manual attendance with id ${t}:`,l),new Error(a.value)}finally{o.value=!1}};return{overtimes:b(()=>c.value),overtime:b(()=>g.value),loading:b(()=>o.value),error:b(()=>a.value),selectedMonth:y,selectedStatus:k,fetchOvertimes:d,fetchOvertimeById:x,createOvertime:u,updateOvertime:O,deleteOvertime:I,inChargeAccept:F,recommendByAccept:S,approvedByAccept:D,rejectOvertime:A,fetchUserOvertimes:w,createBulkOvertime:_}}),K={class:"space-y-2 px-4"},W={class:"flex items-center justify-between gap-2"},z={key:0,class:"text-center py-4"},H={key:1,class:"space-y-4"},Q={class:"overflow-x-auto"},X={class:"min-w-full table-auto border-collapse border border-gray-200 bg-white rounded-md text-sm"},Y={class:"border border-gray-300 px-2"},Z={class:"border border-gray-300 px-2"},ee={class:"border border-gray-300 px-2"},te={class:"border border-gray-300 px-2"},ae={class:"border border-gray-300 px-2"},re={class:"border border-gray-300 px-2"},ne={class:"border border-gray-300 px-2"},se={class:"border border-gray-300 px-2"},oe={key:0},ue={__name:"MyOvertimeList",setup(c){const g=L(),o=J();j(),M(()=>{o.fetchUserOvertimes()});const a=()=>{g.go(-1)},y=b(()=>o.overtimes);return(k,d)=>{var x;const w=R("RouterLink");return p(),h("div",K,[s("div",W,[s("button",{class:"btn-3",onClick:a},d[0]||(d[0]=[s("i",{class:"far fa-arrow-left"},null,-1),s("span",{class:"hidden md:flex"},"Back",-1)])),d[2]||(d[2]=s("h1",{class:"title-md md:title-lg flex-wrap text-center"},"My Manual Overtimes",-1)),s("div",null,[E(w,{to:{name:"MyOvertimeAdd"},class:"btn-2"},{default:V(()=>d[1]||(d[1]=[q("Request")])),_:1})])]),(x=P(o))!=null&&x.loading?(p(),h("div",z,[E(B)])):(p(),h("div",H,[s("div",Q,[s("table",X,[d[5]||(d[5]=s("thead",null,[s("tr",{class:"bg-gray-200"},[s("th",{class:"border border-gray-300 px-2 text-left"},"#"),s("th",{class:"border border-gray-300 px-2 text-left"},"Date"),s("th",{class:"border border-gray-300 px-2 text-left"},"Type"),s("th",{class:"border border-gray-300 px-2 text-left"},"Check-In"),s("th",{class:"border border-gray-300 px-2 text-left"},"Check-Out"),s("th",{class:"border border-gray-300 px-2 text-left"},"Working (hour)"),s("th",{class:"border border-gray-300 px-2 text-left"},"Request Overtime (hour)"),s("th",{class:"border border-gray-300 px-2 text-left"},"Status"),s("th",{class:"border border-gray-300 px-2 text-left"},"Action")])],-1)),s("tbody",null,[(p(!0),h(U,null,G(y.value,(u,_)=>(p(),h("tr",{key:u==null?void 0:u.id,class:"border-b border-gray-200 hover:bg-blue-200"},[s("td",Y,m(_+1),1),s("td",Z,m(new Date(u.date).toLocaleDateString("en-GB",{day:"2-digit",month:"2-digit",year:"numeric"})),1),s("td",ee,m(u.duty_type),1),s("td",te,m(u.check_in||"N/A"),1),s("td",ae,m(u.check_out||"N/A"),1),s("td",re,m(u.working_hours||"-"),1),s("td",ne,m(u.request_overtime_hours||"-"),1),s("td",se,m(u.status||"Pending"),1),d[3]||(d[3]=s("td",{class:"border border-gray-300 px-2"},null,-1))]))),128)),y.value.length===0?(p(),h("tr",oe,d[4]||(d[4]=[s("td",{colspan:"7",class:"p-2 text-center text-red-500"},"No manual overtimes found",-1)]))):T("",!0)])])])]))])}}};export{ue as default};
