import{M as S,r as u,m as i,C as l}from"./index-B0cGJMc7.js";const O=S("user",()=>{const o=u([]),p=u([]),h=u([]),f=u([]),d=u({}),y=u({}),m=u({}),n=u(null),r=u(!1),g=u(new Date().toISOString().substring(0,10)),w=i(()=>o.value),U=i(()=>d.value),b=i(()=>n.value);return{users:o,handoverUsers:f,user:d,error:n,isLoading:r,allUsers:w,userLeaveTypes:h,userLeaveBalance:p,singleUser:U,errorMessage:b,dashboardInfo:m,userDashboard:y,selectedDate:g,fetchUsers:async(s={})=>{var e,a;try{r.value=!0;const t=await l.get("/users",{params:s});o.value=t.data,n.value=null}catch(t){n.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{r.value=!1}},fetchUser:async s=>{var e,a;try{r.value=!0;const c=(await l.get(`/users/${s}`)).data;return c&&(d.value=c),n.value=null,c}catch(t){n.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{r.value=!1}},createUser:async s=>{var e,a;try{r.value=!0;const t=await l.post("/users",s);o.value.push(t.data.user),n.value=null}catch(t){n.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{r.value=!1}},updateUser:async(s,e)=>{var a,t;try{r.value=!0;const c=await l.put(`/users/${s}`,e),v=o.value.findIndex(D=>D.id===s);return v!==-1&&(o.value[v]=c.data.user),n.value=null,c.data.user}catch(c){n.value=((t=(a=c.response)==null?void 0:a.data)==null?void 0:t.message)||"Something went wrong"}finally{r.value=!1}},deleteUser:async s=>{var e,a;try{r.value=!0,await l.delete(`/users/${s}`),o.value=o.value.filter(t=>t.id!==s),n.value=null}catch(t){n.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{r.value=!1}},fetchUserDashboardData:async()=>{var s,e;try{r.value=!0;const t=(await l.get("/dashboard")).data;return t&&(y.value=t),n.value=null,t}catch(a){n.value=((e=(s=a.response)==null?void 0:s.data)==null?void 0:e.message)||"Something went wrong"}finally{r.value=!1}},fetchAdminDashboardData:async()=>{var s,e;try{r.value=!0;const t=(await l.get("/admin-dashboard")).data;return t&&(m.value=t),n.value=null,t}catch(a){n.value=((e=(s=a.response)==null?void 0:s.data)==null?void 0:e.message)||"Something went wrong"}finally{r.value=!1}},fetchTypeWiseEmployees:async(s={})=>{var e,a;try{r.value=!0;const t=await l.get("/type-wise-employees",{params:s});o.value=t.data,n.value=null}catch(t){n.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{r.value=!1}},fetchDepartmentWiseEmployees:async()=>{var s,e;try{r.value=!0;const a=await l.get("/department-wise-employees");return o.value=a.data,n.value=null,o.value}catch(a){n.value=((e=(s=a.response)==null?void 0:s.data)==null?void 0:e.message)||"Something went wrong"}finally{r.value=!1}},fetchHandoverDepartmentWiseEmployees:async()=>{var s,e;try{r.value=!0;const a=await l.get("/department-handover-wise-employees");f.value=a.data,n.value=null}catch(a){n.value=((e=(s=a.response)==null?void 0:s.data)==null?void 0:e.message)||"Something went wrong"}finally{r.value=!1}},fetchUsersExcelExport:async s=>{var e,a;try{r.value=!0;const t=await l.get("/users",{params:{flag:"excel",company_id:s.data.company_id,department_id:s.data.department_id,line_type:s.data.line_type,status:s.data.status},responseType:"blob"}),c=window.URL.createObjectURL(new Blob([t.data])),v=document.createElement("a");v.href=c,v.setAttribute("download","users.xlsx"),document.body.appendChild(v),v.click(),v.remove(),n.value=null}catch(t){n.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{r.value=!1}},saveLeaveBalances:async(s,e)=>{try{return r.value=!0,(await l.post(`/leave-balances/${s}`,{balances:e})).data}catch(a){throw console.error("Failed to save leave balances:",a),a}finally{r.value=!1}},fetchUserLeaveBalances:async s=>{try{const e=await l.get(`/user-leave-balance/${s}`);return p.value=e.data,e.data}catch(e){console.error("Failed to fetch balances",e)}},fetchUserLeaveTypes:async s=>{try{const e=await l.get(`/leave-balances/${s}`);return h.value=e.data,e.data}catch(e){console.error("Failed to fetch balances",e)}}}});export{O as u};
