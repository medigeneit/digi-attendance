import{J as M,r as y,q as S,K as x,u as E,d as L,e as A,A as C,k as F,c as u,o as p,a as e,l as k,p as B,t as c,h as b,g as N,v as $,f as I,F as U,x as V}from"./index-qwVrkjAn.js";import{L as R}from"./LoaderView-Dd2euyfU.js";import"./_plugin-vue_export-helper-DlAUqK2U.js";const q=M("overtime",()=>{const i=y([]),g=y(null),r=y(!1),s=y(null),v=y(new Date().toISOString().substring(0,7)),h=S(()=>new Date(v.value).toLocaleString("default",{month:"long",year:"numeric"}));return{overtimes:i,overtime:g,loading:r,error:s,selectedMonth:v,selectedMonthDisplay:h,fetchOvertimes:async(o={})=>{var d,n;r.value=!0,s.value=null;try{const t=await x.get("/overtimes",{params:o});i.value=t==null?void 0:t.data}catch(t){s.value=((n=(d=t.response)==null?void 0:d.data)==null?void 0:n.message)||"Failed to fetch overtimes",console.error("Error fetching overtimes:",t)}finally{r.value=!1}},createOvertime:async(o={})=>{var d,n;r.value=!0,s.value=null;try{const t=await x.post("/user-overtimes",o);return i.value.push(t.data.overtime),t.data.overtime}catch(t){throw s.value=((n=(d=t.response)==null?void 0:d.data)==null?void 0:n.message)||"Failed to create overtime",console.error("Error creating overtime:",t),new Error(s.value)}finally{r.value=!1}},updateOvertime:async(o,d)=>{var n,t;r.value=!0,s.value=null;try{const m=await x.put(`/overtimes/${o}`,d),O=i.value.findIndex(D=>D.id===o);return O!==-1&&(i.value[O]=m.data.overtime),m.data.overtime}catch(m){throw s.value=((t=(n=m.response)==null?void 0:n.data)==null?void 0:t.message)||`Failed to update overtime (ID: ${o})`,console.error(`Error updating overtime with id ${o}:`,m),new Error(s.value)}finally{r.value=!1}},deleteOvertime:async o=>{var d,n;r.value=!0,s.value=null;try{await x.delete(`/overtimes/${o}`),i.value=i.value.filter(t=>t.id!==o)}catch(t){throw s.value=((n=(d=t.response)==null?void 0:d.data)==null?void 0:n.message)||`Failed to delete overtime (ID: ${o})`,console.error(`Error deleting overtime with id ${o}:`,t),new Error(s.value)}finally{r.value=!1}},fetchUserOvertimes:async(o={})=>{var d,n;r.value=!0,s.value=null;try{const t=await x.get("/user-overtimes",{params:o});i.value=t.data}catch(t){s.value=((n=(d=t.response)==null?void 0:d.data)==null?void 0:n.message)||"Failed to fetch overtimes",console.error("Error fetching overtimes:",t)}finally{r.value=!1}}}}),T={class:"space-y-2 px-4"},j={class:"flex items-center justify-between gap-2"},G={class:"flex items-center gap-2"},J={class:"title-md md:title-lg flex-wrap text-center"},K={class:"flex gap-4"},P={key:0,class:"text-center py-4"},W={key:1,class:"space-y-4"},z={class:"overflow-x-auto"},H={class:"min-w-full table-auto border-collapse border border-gray-200 bg-white rounded-md text-sm"},Q={class:"border border-gray-300 px-2 text-center"},X={class:"border border-gray-300 px-2 text-center"},Y={class:"border border-gray-300 px-2 text-center"},Z={class:"border border-gray-300 px-2 text-center"},ee={class:"border border-gray-300 px-2 text-center"},te={class:"border border-gray-300 px-2 text-center"},re={class:"border border-gray-300 px-2 text-center"},se={class:"border border-gray-300 px-2 text-center"},oe={class:"border border-gray-300 px-2 text-center"},ae={class:"border border-gray-300 px-2 text-center"},ne={key:0},ie={__name:"MyOvertimeList",setup(i){const g=E(),r=q();L(),A(()=>{r.fetchUserOvertimes({month:r.selectedMonth})});const s=()=>{g.go(-1)},v=S(()=>r.overtimes);return C(()=>r.selectedMonth,h=>{h&&r.fetchUserOvertimes({month:h})}),(h,l)=>{var f;const _=F("RouterLink");return p(),u("div",T,[e("div",j,[e("div",G,[e("button",{class:"btn-3 py-1",onClick:s},l[1]||(l[1]=[e("i",{class:"far fa-arrow-left"},null,-1),e("span",{class:"hidden md:flex"},"Back",-1)])),k(_,{to:{name:"MyOvertimeAdd"},class:"btn-2"},{default:B(()=>l[2]||(l[2]=[e("i",{class:"far fa-plus"},null,-1),e("span",{class:"hidden md:flex"},"Overtime",-1)])),_:1})]),e("h1",J," Overtime of "+c(b(r).selectedMonthDisplay),1),e("div",K,[e("div",null,[N(e("input",{id:"monthSelect",type:"month","onUpdate:modelValue":l[0]||(l[0]=a=>b(r).selectedMonth=a),class:"input-1"},null,512),[[$,b(r).selectedMonth]])])])]),(f=b(r))!=null&&f.loading?(p(),u("div",P,[k(R)])):(p(),u("div",W,[e("div",z,[e("table",H,[l[5]||(l[5]=e("thead",null,[e("tr",{class:"bg-gray-200 *:py-1"},[e("th",{class:"border border-gray-300 px-2 text-center"},"#"),e("th",{class:"border border-gray-300 px-2 text-center"},"Date"),e("th",{class:"border border-gray-300 px-2 text-center"},"Type"),e("th",{class:"border border-gray-300 px-2 text-center"},"Shift"),e("th",{class:"border border-gray-300 px-2 text-center"},"Check-In"),e("th",{class:"border border-gray-300 px-2 text-center"},"Check-Out"),e("th",{class:"border border-gray-300 px-2 text-center"},"Working (hour)"),e("th",{class:"border border-gray-300 px-2 text-center"},"Request (hour)"),e("th",{class:"border border-gray-300 px-2 text-center"},"Approved (hour)"),e("th",{class:"border border-gray-300 px-2 text-center"},"Status"),e("th",{class:"border border-gray-300 px-2 text-center"},"Action")])],-1)),e("tbody",null,[(p(!0),u(U,null,V(v.value,(a,w)=>(p(),u("tr",{key:a==null?void 0:a.id,class:"border-b border-gray-200 hover:bg-blue-200 *:py-2"},[e("td",Q,c(w+1),1),e("td",X,c(new Date(a.date).toLocaleDateString("en-GB",{day:"2-digit",month:"long",year:"numeric"})),1),e("td",Y,c(a.duty_type),1),e("td",Z,c(a.shift),1),e("td",ee,c(a.check_in||"N/A"),1),e("td",te,c(a.check_out||"N/A"),1),e("td",re,c(a.working_hours||"-"),1),e("td",se,c(a.request_overtime_hours||"-"),1),e("td",oe,c(a.approved_overtime_hours||"-"),1),e("td",ae,c(a.status||"Pending"),1),l[3]||(l[3]=e("td",{class:"border border-gray-300 px-2 text-center"},null,-1))]))),128)),v.value.length===0?(p(),u("tr",ne,l[4]||(l[4]=[e("td",{colspan:"7",class:"p-2 text-center text-red-500"},"No overtimes found",-1)]))):I("",!0)])])])]))])}}};export{ie as default};
