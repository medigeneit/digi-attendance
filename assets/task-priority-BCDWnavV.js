import{o as T}from"./url-CePbr-gY.js";import{D as m,r as v,m as h,c as g,o as k,h as b,a as p,v as x,g as I,w as S}from"./index-DPIp4nXa.js";import{u as V}from"./useTaskStore-Co6VBnju.js";async function N({params:e={}}={}){return m.get("/tasks/employees",{params:e})}async function U(e,r){return m.put(`/my-tasks/${e}/update-status`,r)}async function D(e,{params:r={}}={}){const t=T(r);return m.delete(`/tasks/${e}${t?"?"+t:""}`)}async function E(e){return m.post(`/tasks/${e}/restore`)}const w={class:"text-gray-600 relative"},P=["placeholder"],_={class:"absolute right-2 top-[50%] translate-y-[-50%] flex gap-1"},M={__name:"SearchInput",props:{modelValue:String,placeholder:{type:String,default:"Type to search..."},debounceTime:{type:Number,default:500}},emits:["update:modelValue"],setup(e,{emit:r}){const t=e,d=v(),f=r,l=n=>{f("update:modelValue",n||void 0)};let u=0;const i=h({get(){return t.modelValue},set(n){t.debounceTime>0?(clearTimeout(u),u=setTimeout(l,t.debounceTime,n)):l(n)}});return(n,s)=>(k(),g("div",w,[b(p("input",{ref_key:"searchInput",ref:d,id:"search","onUpdate:modelValue":s[0]||(s[0]=a=>i.value=a),type:"text",class:"!pr-7 w-full rounded-md px-2 py-1 border-2 border-gray-400 placeholder:text-sm focus:outline-gray-400 h-full",placeholder:e.placeholder},null,8,P),[[x,i.value]]),s[3]||(s[3]=p("label",{class:"absolute text-xs left-2.5 -top-1.5 bg-slate-100 text-blue-500"},"Search",-1)),p("div",_,[i.value?(k(),g("i",{key:0,class:"fas fa-times opacity-35 hover:opacity-60 cursor-pointer",onClick:s[1]||(s[1]=S(()=>{l(""),d.value.focus()},["prevent"]))})):I("",!0),s[2]||(s[2]=p("i",{class:"fas fa-search opacity-80"},null,-1))])]))}};function R(e,r=0){const t=v([]),{updateTaskPriorities:d}=V(),f=h(()=>(console.log({getOldTaskList:e}),e()));function l(a){const c=f.value.map(y=>y.id),o=a.map(y=>y.id);u(c,o)?t.value=o:t.value=[],console.log({reordered:u(c,o)})}function u(a,c){if(a.length!==c.length)return!1;for(let o=0;o<a.length;o++)if(a[o]!==c[o])return!0;return!1}function i(){t.value=[]}async function n(){const a=await d(r,t.value);return t.value=[],a}const s=h(()=>t.value.length>0);return{handleItemsPriorityUpdate:l,saveTaskPriority:n,listHasRearranged:s,discardTaskPriority:i}}export{M as _,U as a,D as d,N as g,E as r,R as u};
