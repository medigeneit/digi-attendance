import{o as T}from"./url-CePbr-gY.js";import{D as r,r as h,m as p}from"./index-D9IEX7DE.js";import{u as k}from"./useTaskStore-CeVCPj6V.js";async function f({params:t={}}={}){return r.get("/tasks/employees",{params:t})}async function R(t,e){return r.put(`/my-tasks/${t}/update-status`,e)}async function _(t,{params:e={}}={}){const n=T(e);return r.delete(`/tasks/${t}${n?"?"+n:""}`)}async function $(t){return r.post(`/tasks/${t}/restore`)}function C(t,e=0){const n=h([]),{updateTaskPriorities:o}=k(),c=p(()=>(console.log({getOldTaskList:t}),t()));function m(a){const u=c.value.map(d=>d.id),s=a.map(d=>d.id);i(u,s)?n.value=s:n.value=[],console.log({reordered:i(u,s)})}function i(a,u){if(a.length!==u.length)return!1;for(let s=0;s<a.length;s++)if(a[s]!==u[s])return!0;return!1}function l(){n.value=[]}async function y(){const a=await o(e,n.value);return n.value=[],a}const g=p(()=>n.value.length>0);return{handleItemsPriorityUpdate:m,saveTaskPriority:y,listHasRearranged:g,discardTaskPriority:l}}function v(t,e){let n=!0;if(e!=null&&e["user-ids"]&&(n=n&&t.users.some(o=>o.id==(e==null?void 0:e["user-ids"]))),e!=null&&e.status){const o={"not-completed":["IN_PROGRESS","PENDING"],"only-completed":["COMPLETED"]},c=o==null?void 0:o[e==null?void 0:e.status];n=n&&c.includes(t==null?void 0:t.status)}return n}function P(t,e){return t==null?void 0:t.filter(n=>v(n,e)).map(n=>({...n,children_tasks:n.children_tasks.length>0?P(n.children_tasks,e):[]}))}export{R as a,_ as d,f as g,P as m,$ as r,C as u};
