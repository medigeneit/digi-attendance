import{P as x,r as u,x as v,Q as l}from"./index-Eg-XCLes.js";const P=x("user",()=>{const c=u([]),p=u([]),h=u([]),y=u([]),i=u({}),f=u({}),m=u({}),r=u(null),n=u(!1),w=u(new Date().toISOString().substring(0,10)),U=v(()=>c.value),b=v(()=>i.value),S=v(()=>r.value),g=async(s={})=>{var e,a;try{n.value=!0;const t=await l.get("/users",{params:s});c.value=t.data,r.value=null}catch(t){r.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{n.value=!1}};return{users:c,handoverUsers:y,user:i,error:r,isLoading:n,allUsers:U,userLeaveTypes:h,userLeaveBalance:p,singleUser:b,errorMessage:S,dashboardInfo:m,userDashboard:f,selectedDate:w,fetchUsers:g,fetchUser:async s=>{var e,a;try{n.value=!0;const o=(await l.get(`/users/${s}`)).data;return o&&(i.value=o),r.value=null,o}catch(t){r.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{n.value=!1}},createUser:async s=>{var e,a;try{n.value=!0;const t=await l.post("/users",s);c.value.push(t.data.user),r.value=null}catch(t){r.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{n.value=!1}},updateUser:async(s,e)=>{var a,t;try{n.value=!0;const o=await l.put(`/users/${s}`,e),d=c.value.findIndex(D=>D.id===s);return d!==-1&&(c.value[d]=o.data.user),r.value=null,o.data.user}catch(o){r.value=((t=(a=o.response)==null?void 0:a.data)==null?void 0:t.message)||"Something went wrong"}finally{n.value=!1}},deleteUser:async s=>{var e,a;try{n.value=!0,await l.delete(`/users/${s}`),c.value=c.value.filter(t=>t.id!==s),r.value=null}catch(t){r.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{n.value=!1}},fetchUserDashboardData:async()=>{var s,e;try{n.value=!0;const t=(await l.get("/dashboard")).data;return t&&(f.value=t),r.value=null,t}catch(a){r.value=((e=(s=a.response)==null?void 0:s.data)==null?void 0:e.message)||"Something went wrong"}finally{n.value=!1}},fetchAdminDashboardData:async()=>{var s,e;try{n.value=!0;const t=(await l.get("/admin-dashboard")).data;return t&&(m.value=t),r.value=null,t}catch(a){r.value=((e=(s=a.response)==null?void 0:s.data)==null?void 0:e.message)||"Something went wrong"}finally{n.value=!1}},fetchTypeWiseEmployees:async(s={})=>{var e,a;try{n.value=!0;const t=await l.get("/type-wise-employees",{params:s});c.value=t.data,r.value=null}catch(t){r.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{n.value=!1}},fetchDepartmentWiseEmployees:async()=>{var s,e;try{n.value=!0;const a=await l.get("/department-wise-employees");return c.value=a.data,r.value=null,c.value}catch(a){r.value=((e=(s=a.response)==null?void 0:s.data)==null?void 0:e.message)||"Something went wrong"}finally{n.value=!1}},fetchHandoverDepartmentWiseEmployees:async()=>{var s,e;try{n.value=!0;const a=await l.get("/department-handover-wise-employees");y.value=a.data,r.value=null}catch(a){r.value=((e=(s=a.response)==null?void 0:s.data)==null?void 0:e.message)||"Something went wrong"}finally{n.value=!1}},fetchUsersExcelExport:async s=>{var e,a;try{n.value=!0;const t=await l.get("/users",{params:{flag:"excel",company_id:s.data.company_id,department_id:s.data.department_id,line_type:s.data.line_type,status:s.data.status},responseType:"blob"}),o=window.URL.createObjectURL(new Blob([t.data])),d=document.createElement("a");d.href=o,d.setAttribute("download","users.xlsx"),document.body.appendChild(d),d.click(),d.remove(),r.value=null}catch(t){r.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{n.value=!1}},saveLeaveBalances:async(s,e)=>{try{return n.value=!0,(await l.post(`/leave-balances/${s}`,{balances:e})).data}catch(a){throw console.error("Failed to save leave balances:",a),a}finally{n.value=!1}},fetchUserLeaveBalances:async(s,e=null)=>{try{const a={};e!=null&&e.type&&(a.type=e.type),e!=null&&e.applicationId&&(a.context_application_id=e.applicationId);const t=await l.get(`/user-leave-balance/${s}`,{params:a});return p.value=t.data,t.data}catch(a){console.error("Failed to fetch balances",a)}},fetchUserLeaveTypes:async s=>{try{const e=await l.get(`/leave-balances/${s}`);return h.value=e.data,e.data}catch(e){console.error("Failed to fetch balances",e)}},updateOrCreateWeekend:async(s,e)=>{var a,t;try{const o=await l.post(`/employee/weekend/update-or-create/${s}`,{selected_weekend:e});return g(),o.data.message}catch(o){throw new Error(((t=(a=o.response)==null?void 0:a.data)==null?void 0:t.message)||o.message)}},fetchUserWeekends:async s=>{var e,a;try{const t=await l.get(`/employee/weekends/${s}`);return(t==null?void 0:t.data)??t}catch(t){r.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}},fetchUserShifts:async s=>{var e,a;try{const t=await l.get(`/employee/${s}/shift-history`);return(t==null?void 0:t.data)??t}catch(t){r.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}}}});export{P as u};
