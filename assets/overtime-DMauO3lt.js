import{M as I,r as c,m as U,C as i,a3 as P}from"./index-D3cD3zlZ.js";const B=I("overtime",()=>{const n=c([]),d=c([]),v=c(null),l=c(!1),s=c(null),p=c(new Date().toISOString().substring(0,7)),y=U(()=>new Date(p.value).toLocaleString("default",{month:"long",year:"numeric"})),h=async(t={})=>{var a,r;l.value=!0,s.value=null;try{const e=await i.get("/overtimes",{params:t});n.value=e==null?void 0:e.data}catch(e){s.value=((r=(a=e.response)==null?void 0:a.data)==null?void 0:r.message)||"Failed to fetch overtimes",console.error("Error fetching overtimes:",e)}finally{l.value=!1}},g=async(t={})=>{var a,r;l.value=!0,s.value=null;try{const e=await i.get("/user-overtimes",{params:t});n.value=e.data}catch(e){s.value=((r=(a=e.response)==null?void 0:a.data)==null?void 0:r.message)||"Failed to fetch overtimes",console.error("Error fetching overtimes:",e)}finally{l.value=!1}},w=async(t,a)=>{var r,e;l.value=!0,s.value=null;try{const o=await i.get(`/user-monthly-overtimes/${t}/${a}`);n.value=o.data}catch(o){s.value=((e=(r=o.response)==null?void 0:r.data)==null?void 0:e.message)||"Failed to fetch overtimes",console.error("Error fetching overtimes:",o)}finally{l.value=!1}},$=async t=>{var a,r;l.value=!0,s.value=null;try{const e=await i.get(`/${t}/user-overtimes`);n.value=e.data}catch(e){s.value=((r=(a=e.response)==null?void 0:a.data)==null?void 0:r.message)||"Failed to fetch overtimes",console.error("Error fetching overtimes:",e)}finally{l.value=!1}},E=async(t={})=>{var a,r;l.value=!0,s.value=null;try{const e=await i.post("/user-overtimes",t);return n.value.push(e.data.overtime),e.data.overtime}catch(e){throw s.value=((r=(a=e.response)==null?void 0:a.data)==null?void 0:r.message)||"Failed to create overtime",console.error("Error creating overtime:",e),new Error(s.value)}finally{l.value=!1}},O=async t=>{var a,r;l.value=!0,s.value=null;try{const e=await i.get(`/overtimes/${t}`);return v.value=e.data||{},await P().fetchApprovalPermissions("overtime_applications",v.value.id),v.value}catch(e){throw s.value=((r=(a=e.response)==null?void 0:a.data)==null?void 0:r.message)||`Failed to fetch overtime (ID: ${t})`,console.error(`Error fetching overtime with id ${t}:`,e),new Error(s.value)}finally{l.value=!1}},x=async(t,a)=>{var r,e;l.value=!0,s.value=null;try{const o=await i.patch(`/user-overtimes/${t}/update-approval-time`,{approval_overtime_hours:a}),u=n.value.findIndex(m=>m.id===t);return u!==-1&&(n.value[u]=o.data),o.data.overtime}catch(o){throw s.value=((e=(r=o.response)==null?void 0:r.data)==null?void 0:e.message)||`Failed to update overtime (ID: ${t})`,console.error(`Error updating overtime with id ${t}:`,o),new Error(s.value)}finally{l.value=!1}},D=async(t,a)=>{var r,e;l.value=!0,s.value=null;try{const o=await i.put(`/overtimes/${t}`,a),u=n.value.findIndex(m=>m.id===t);return u!==-1&&(n.value[u]=o.data.overtime),o.data.overtime}catch(o){throw s.value=((e=(r=o.response)==null?void 0:r.data)==null?void 0:e.message)||`Failed to update overtime (ID: ${t})`,console.error(`Error updating overtime with id ${t}:`,o),new Error(s.value)}finally{l.value=!1}},b=async t=>{var a,r;l.value=!0,s.value=null;try{await i.delete(`/overtimes/${t}`),n.value=n.value.filter(e=>e.id!==t)}catch(e){throw s.value=((r=(a=e.response)==null?void 0:a.data)==null?void 0:r.message)||`Failed to delete overtime (ID: ${t})`,console.error(`Error deleting overtime with id ${t}:`,e),new Error(s.value)}finally{l.value=!1}},F=async(t,a={})=>{var r,e;l.value=!0,s.value=null;try{console.log(t,a);const o=await i.get(`/user-monthly-overtimes-report/${t}`,{params:a});return d.value=o==null?void 0:o.data,o==null?void 0:o.data}catch(o){s.value=((e=(r=o.response)==null?void 0:r.data)==null?void 0:e.message)||"Failed to fetch overtimes",console.error("Error fetching overtimes:",o)}finally{l.value=!1}},S=async(t,a={})=>{try{const r=await i.get(`/user-monthly-overtimes-report/${t}?flag=excel`,{responseType:"blob",params:{...a,excel:!0}});f(r.data,`CompanyDepartmentOvertime-${t}.xlsx`)}catch(r){console.error("Excel export failed:",r)}},C=async(t,a={})=>{try{const r=new URLSearchParams({...a,flag:"pdf"}).toString(),e=await i.get(`/user-monthly-overtimes-report/${t}?${r}`,{responseType:"blob"});f(e.data,`CompanyDepartmentOvertime-${t}.pdf`)}catch(r){console.error("PDF Export Error:",r)}};function f(t,a){const r=window.URL.createObjectURL(new Blob([t])),e=document.createElement("a");e.href=r,e.setAttribute("download",a),document.body.appendChild(e),e.click(),document.body.removeChild(e)}return{overtimes:n,reports:d,overtime:v,loading:l,error:s,selectedMonth:p,selectedMonthDisplay:y,fetchOvertimes:h,createOvertime:E,fetchOvertimeById:O,updateApprovalTime:x,updateOvertime:D,deleteOvertime:b,fetchUserOvertimes:g,fetchUserMonthlyOvertimes:w,fetchUserOvertimesByApplicationId:$,getCompanyDepartmentOvertimeReport:F,exportCompanyDepartmentOvertimeExcel:S,exportCompanyDepartmentOvertimePdf:C}});export{B as u};
