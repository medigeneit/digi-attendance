import{J as E,r as u,p as i,G as o}from"./index-CnhhQSUr.js";const j=E("user",()=>{const c=u([]),p=u([]),h=u([]),y=u([]),v=u({}),f=u({}),m=u({}),n=u(null),r=u(!1),w=u(new Date().toISOString().substring(0,10)),U=i(()=>c.value),b=i(()=>v.value),D=i(()=>n.value),g=async(s={})=>{var e,a;try{r.value=!0;const t=await o.get("/users",{params:s});c.value=t.data,n.value=null}catch(t){n.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{r.value=!1}};return{users:c,handoverUsers:y,user:v,error:n,isLoading:r,allUsers:U,userLeaveTypes:h,userLeaveBalance:p,singleUser:b,errorMessage:D,dashboardInfo:m,userDashboard:f,selectedDate:w,fetchUsers:g,fetchUser:async s=>{var e,a;try{r.value=!0;const l=(await o.get(`/users/${s}`)).data;return l&&(v.value=l),n.value=null,l}catch(t){n.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{r.value=!1}},createUser:async s=>{var e,a;try{r.value=!0;const t=await o.post("/users",s);c.value.push(t.data.user),n.value=null}catch(t){n.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{r.value=!1}},updateUser:async(s,e)=>{var a,t;try{r.value=!0;const l=await o.put(`/users/${s}`,e),d=c.value.findIndex(S=>S.id===s);return d!==-1&&(c.value[d]=l.data.user),n.value=null,l.data.user}catch(l){n.value=((t=(a=l.response)==null?void 0:a.data)==null?void 0:t.message)||"Something went wrong"}finally{r.value=!1}},deleteUser:async s=>{var e,a;try{r.value=!0,await o.delete(`/users/${s}`),c.value=c.value.filter(t=>t.id!==s),n.value=null}catch(t){n.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{r.value=!1}},fetchUserDashboardData:async()=>{var s,e;try{r.value=!0;const t=(await o.get("/dashboard")).data;return t&&(f.value=t),n.value=null,t}catch(a){n.value=((e=(s=a.response)==null?void 0:s.data)==null?void 0:e.message)||"Something went wrong"}finally{r.value=!1}},fetchAdminDashboardData:async()=>{var s,e;try{r.value=!0;const t=(await o.get("/admin-dashboard")).data;return t&&(m.value=t),n.value=null,t}catch(a){n.value=((e=(s=a.response)==null?void 0:s.data)==null?void 0:e.message)||"Something went wrong"}finally{r.value=!1}},fetchTypeWiseEmployees:async(s={})=>{var e,a;try{r.value=!0;const t=await o.get("/type-wise-employees",{params:s});c.value=t.data,n.value=null}catch(t){n.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{r.value=!1}},fetchDepartmentWiseEmployees:async()=>{var s,e;try{r.value=!0;const a=await o.get("/department-wise-employees");return c.value=a.data,n.value=null,c.value}catch(a){n.value=((e=(s=a.response)==null?void 0:s.data)==null?void 0:e.message)||"Something went wrong"}finally{r.value=!1}},fetchHandoverDepartmentWiseEmployees:async()=>{var s,e;try{r.value=!0;const a=await o.get("/department-handover-wise-employees");y.value=a.data,n.value=null}catch(a){n.value=((e=(s=a.response)==null?void 0:s.data)==null?void 0:e.message)||"Something went wrong"}finally{r.value=!1}},fetchUsersExcelExport:async s=>{var e,a;try{r.value=!0;const t=await o.get("/users",{params:{flag:"excel",company_id:s.data.company_id,department_id:s.data.department_id,line_type:s.data.line_type,status:s.data.status},responseType:"blob"}),l=window.URL.createObjectURL(new Blob([t.data])),d=document.createElement("a");d.href=l,d.setAttribute("download","users.xlsx"),document.body.appendChild(d),d.click(),d.remove(),n.value=null}catch(t){n.value=((a=(e=t.response)==null?void 0:e.data)==null?void 0:a.message)||"Something went wrong"}finally{r.value=!1}},saveLeaveBalances:async(s,e)=>{try{return r.value=!0,(await o.post(`/leave-balances/${s}`,{balances:e})).data}catch(a){throw console.error("Failed to save leave balances:",a),a}finally{r.value=!1}},fetchUserLeaveBalances:async s=>{try{const e=await o.get(`/user-leave-balance/${s}`);return p.value=e.data,e.data}catch(e){console.error("Failed to fetch balances",e)}},fetchUserLeaveTypes:async s=>{try{const e=await o.get(`/leave-balances/${s}`);return h.value=e.data,e.data}catch(e){console.error("Failed to fetch balances",e)}},updateOrCreateWeekend:async(s,e)=>{var a,t;try{const l=await o.post(`/employee/weekend/update-or-create/${s}`,{selected_weekend:e});return g(),l.data.message}catch(l){throw new Error(((t=(a=l.response)==null?void 0:a.data)==null?void 0:t.message)||l.message)}}}});export{j as u};
