import{J as h,r as i,q as p,K as v}from"./index-DHx-UfKa.js";const D=h("overtime",()=>{const l=i([]),m=i(null),s=i(!1),r=i(null),u=i(new Date().toISOString().substring(0,7)),d=p(()=>new Date(u.value).toLocaleString("default",{month:"long",year:"numeric"}));return{overtimes:l,overtime:m,loading:s,error:r,selectedMonth:u,selectedMonthDisplay:d,fetchOvertimes:async(t={})=>{var o,a;s.value=!0,r.value=null;try{const e=await v.get("/overtimes",{params:t});l.value=e==null?void 0:e.data}catch(e){r.value=((a=(o=e.response)==null?void 0:o.data)==null?void 0:a.message)||"Failed to fetch overtimes",console.error("Error fetching overtimes:",e)}finally{s.value=!1}},createOvertime:async(t={})=>{var o,a;s.value=!0,r.value=null;try{const e=await v.post("/user-overtimes",t);return l.value.push(e.data.overtime),e.data.overtime}catch(e){throw r.value=((a=(o=e.response)==null?void 0:o.data)==null?void 0:a.message)||"Failed to create overtime",console.error("Error creating overtime:",e),new Error(r.value)}finally{s.value=!1}},updateOvertime:async(t,o)=>{var a,e;s.value=!0,r.value=null;try{const n=await v.put(`/overtimes/${t}`,o),c=l.value.findIndex(f=>f.id===t);return c!==-1&&(l.value[c]=n.data.overtime),n.data.overtime}catch(n){throw r.value=((e=(a=n.response)==null?void 0:a.data)==null?void 0:e.message)||`Failed to update overtime (ID: ${t})`,console.error(`Error updating overtime with id ${t}:`,n),new Error(r.value)}finally{s.value=!1}},deleteOvertime:async t=>{var o,a;s.value=!0,r.value=null;try{await v.delete(`/overtimes/${t}`),l.value=l.value.filter(e=>e.id!==t)}catch(e){throw r.value=((a=(o=e.response)==null?void 0:o.data)==null?void 0:a.message)||`Failed to delete overtime (ID: ${t})`,console.error(`Error deleting overtime with id ${t}:`,e),new Error(r.value)}finally{s.value=!1}},fetchUserOvertimes:async(t={})=>{var o,a;s.value=!0,r.value=null;try{const e=await v.get("/user-overtimes",{params:t});l.value=e.data}catch(e){r.value=((a=(o=e.response)==null?void 0:o.data)==null?void 0:a.message)||"Failed to fetch overtimes",console.error("Error fetching overtimes:",e)}finally{s.value=!1}}}});export{D as u};
