import{N as F,r as i,x as y,O as d}from"./index-COZjv0kr.js";const N=F("todo",()=>{const h=i(null),u=i(!1),T=i(!1),s=i(null),l=i([]),m=async r=>{var a,o,t;u.value=!0,s.value=null;try{const e=await d.get("/todos",{params:r});l.value=((a=e.data)==null?void 0:a.todos)||[],f()}catch(e){throw s.value=((t=(o=e.response)==null?void 0:o.data)==null?void 0:t.message)||"Todos load failed",e}finally{u.value=!1}};function f(){l.value=[...l.value.sort((r,a)=>(r==null?void 0:r.user_id)!==(a==null?void 0:a.user_id)?(r==null?void 0:r.user_id)-(a==null?void 0:a.user_id):r.priority!==a.priority?r.priority-a.priority:a.id-r.id)]}const w=async r=>{var a,o,t;u.value=!0,s.value=null;try{const e=await d.get("/my-todos",{params:r});l.value=((a=e.data)==null?void 0:a.todos)||[],f()}catch(e){throw s.value=((t=(o=e.response)==null?void 0:o.data)==null?void 0:t.message)||"Todos load failed",e}finally{u.value=!1}},_=r=>{var a;return(a=l.value)==null?void 0:a.filter(o=>o.date==r)},$=async r=>{var a,o;u.value=!0,s.value=null;try{const t=await d.get(`/todos/${r}`);h.value=t.data,h.value=l.value.find(e=>e.id==r)}catch(t){throw s.value=((o=(a=t.response)==null?void 0:a.data)==null?void 0:o.message)||"Todo load failed",t}finally{u.value=!1}},S=async(r,{returnWith:a}={})=>{var o,t,e;u.value=!0,s.value=null;try{const n=await d.post("/todos",r,{params:{return_with:a}});return l.value=[...l.value,(o=n.data)==null?void 0:o.todo],f(),n.data}catch(n){throw s.value=((e=(t=n.response)==null?void 0:t.data)==null?void 0:e.message)||"Todo create failed",n}finally{u.value=!1}},x=async(r,a)=>{var o,t;u.value=!0,s.value=null;try{const e=await d.put(`/todos/${r}`,a);return l.value=l.value.map(n=>{var g,c,v,p;return n.id==((c=(g=e.data)==null?void 0:g.todo)==null?void 0:c.id)?n.user?{...(v=e.data)==null?void 0:v.todo,user:{...n.user}}:{...(p=e.data)==null?void 0:p.todo}:{...n}}),e.data}catch(e){throw s.value=((t=(o=e.response)==null?void 0:o.data)==null?void 0:t.message)||"Todo update failed",e}finally{u.value=!1}},M=async(r,a)=>{var o,t;u.value=!0,s.value=null;try{await d.put(`/todos/status/${r}`,{status:a}),l.value=l.value.map(e=>e.id===r?{...e,status:a}:{...e})}catch(e){throw s.value=((t=(o=e.response)==null?void 0:o.data)==null?void 0:t.message)||"Failed to update todo status",e}finally{u.value=!1}},C=async(r,{date:a}={})=>{var o,t;u.value=!0,T.value=!0,s.value=null;try{const e=await d.put("/my-todos/rearrange",{ids:r,date:a});l.value=l.value.map(n=>{var v;const c=(((v=e.data)==null?void 0:v.changes)||[]).find(p=>p.id==n.id);return c?{...n,priority:c.priority}:n}),f()}catch(e){throw s.value=((t=(o=e.response)==null?void 0:o.data)==null?void 0:t.message)||"Todo rearranging failed",e}finally{T.value=!0,u.value=!1}},D=async r=>{var a,o;u.value=!0,s.value=null;try{await d.delete(`/todos/${r}`),l.value=l.value.filter(t=>t.id!==r)}catch(t){throw s.value=((o=(a=t.response)==null?void 0:a.data)==null?void 0:o.message)||"Todo delete failed",t}finally{u.value=!1}};return{todos:y(()=>l.value),todo:y(()=>h.value),loading:y(()=>u.value),error:y(()=>s.value),fetchTodos:m,fetchTodo:$,createTodo:S,updateTodo:x,rearrangeMyTodos:C,deleteTodo:D,fetchMyTodos:w,updateTodoStatus:M,getTodosByDate:_}});export{N as u};
